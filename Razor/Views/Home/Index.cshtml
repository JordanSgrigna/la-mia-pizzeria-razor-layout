@{
    Layout = null;
}

<div>
    <p>
        <strong>
            Dichiarare una variabile valorizzandola con il nostro nome.
            Dichiarare un'altra variabile valorizzandola con il nostro cognome.
            Stampare il nostro nome e cognome all'interno di un tag h2.
        </strong>
    </p>
    @{
        string myName = "Jordan";
        string mySurname = "Sgrigna";
    }

    <h2>@myName @mySurname</h2>
</div>
<div>
    <p>
        <strong>
            Creare una funzione che stampa la somma dei numeri che vanno da 1 a n (con n passato come parametro - n incluso)
            Stampare dentro uno span il risultato.
        </strong>
    </p>
    
    @{
        int SumOneToN(int n)
        {
            int sum = 0;
            for(int i=1; i<=n; i++)
            {
                sum += i;
            }
            return sum;
        }
    }

    <span>@SumOneToN(5)</span>
</div>
<div>
    <p>
        <strong>
            Contare quante volte la lettera a è presente nalla frase "nel mezzo del cammin di nostra vita" e stampare questo valore in pagina
        </strong>
    </p>
    @{
        int CountLettersInAString(string stringToCount, char charToFind)
        {
            int count = 0;
            foreach(char c in stringToCount)
            {
                if(c == charToFind)
                {
                    count++;
                }
            }
            return count;
        }
    }

    <p>@CountLettersInAString("nel mezzo del cammin di nostra vita", 'a')</p>
</div>
<div>
    <p>
        <strong>
            Creare una List<int> di 20 numeri interi (generati random da 1 a 90, 1 e 90 inclusi) e mostrare in pagina solo i numeri compresi tra 20 e 70
        </strong>
    </p>
    @{
        Random rnd = new Random();
        List<int> randomGeneratedNumbers = new List<int>();

        for(int i = 0; i < 20; i++)
        {
            int randomNumber = rnd.Next(1, 91);
            randomGeneratedNumbers.Add(randomNumber);
        }
    }

    <ul>
        @foreach(int n in randomGeneratedNumbers)
        {
            if(n>20 && n < 70)
            {
                <li>@n</li>
            }
        }
    </ul>
</div>
<div>
    <p>
        <strong>
            Stampare in pagina la data e l'ora attuale (usando la classe DateTime) con il formato anno-mese-giorno ore:minuti:secondi
        </strong>
    </p>
    <p>@DateTime.Now.ToString("dd/MM/yyy HH:mm:ss")</p>
</div>
<div>
    <p>
        <strong>
            6. Partendo dalla data di oggi (usando la classe DateTime) stampare in pagina
            a. la data di 7 giorni fa
            b. che giorno della settimana è oggi (il risultato dovrà essere il nome del giorno (Lunedì, Martedì, ...)
            c. che giorno della settimana sarà nello stesso giorno e mese di oggi ma tra un anno (il risultato dovrà essere il nome del giorno (Lunedì, Martedì, ...)
        </strong>
    </p>
    <p>a. @DateTime.Now.AddDays(-7)</p>
    <p>b. @DateTime.Now.DayOfWeek</p>
    <p>c. @DateTime.Now.AddYears(1).DayOfWeek</p>

</div>
